import { useState } from 'react';
import { TextInput, View, StyleSheet, Text, ScrollView, Button } from 'react-native';
import Toast from 'react-native-toast-message'; 
import RadioButtonGroup, { RadioButtonItem } from 'expo-radio-button';
import ScrollPicker from 'react-native-wheel-scrollview-picker';
import { showToast } from '../util';
import { USER_TYPES } from '../controllers/auth/user';

export default function EditUser() {

  const [userTypeText, setUserTypeText] = useState('');

  const [studentColor, setStudentColor] = useState('black');
  const [tutorColor, setTutorColor] = useState('black');

  const [studentBgColor, setStudentBgColor] = useState('white');
  const [tutorBgColor, setTutorBgColor] = useState('white');

  const [removeUserEmailText, setRemoveUserEmailText] = useState(undefined);
  const [createUserEmailText, setCreateUserEmailText] = useState(undefined);

  const setUserSelectButtonColor = (text) => {
    (text === USER_TYPES.STUDENT) ? setStudentColor('white') : setStudentColor('black');
    (text === USER_TYPES.TUTOR) ? setTutorColor('white') : setTutorColor('black');

    (text === USER_TYPES.STUDENT) ? setStudentBgColor('gray') : setStudentBgColor('white');
    (text === USER_TYPES.TUTOR) ? setTutorBgColor('gray') : setTutorBgColor('white');
  };

 return(
    <>
      <View style={styles.container}>
      <ScrollView>
        <View style={styles.titleContainer}><Text style={styles.Title}>Remove A User</Text></View>
        <View>
          <Text style={styles.label}>User Email</Text>
          <TextInput
            style={styles.input}
            placeholder='User Email Address'
            keyboardType='email-address'
            backgroundColor='#fbfbfb'
            maxLength={40}
            onChangeText={text => setRemoveUserEmailText(text)}>
          </TextInput >
          <Button title='Remove User' />
        </View>
        <View style={styles.titleContainer}><Text style={styles.Title}>Create A User</Text></View>
          <Text style={styles.label}>User Email</Text>
          <TextInput
            style={styles.input}
            placeholder='User Email Address'
            keyboardType='email-address'
            backgroundColor='#fbfbfb'
            maxLength={40}
            onChangeText={text => setCreateUserEmailText(text)}>
          </TextInput >
          <TextInput
            style={styles.input}
            placeholder='Password'
            secureTextEntry={true}
            autoCorrect={false}
            keyboardType='default'
            backgroundColor='#fbfbfb'
            width={280}
            maxLength={40}
            onChangeText={text = setCreateUserPasswordText(text)}>
          </TextInput >
          <View style={{ borderWidth: 1, margin: 5, alignItems: 'center', justifyContent: 'center' }}>
            <RadioButtonGroup
              containerStyle={{ margin: 10 }}
              selected={userTypeText}
              onSelected={(text) => {
                setUserTypeText(text);
                setUserSelectButtonColor(text);
              }}
              radioBackground="grey"
            >
              <RadioButtonItem style={styles.radioButton} value={USER_TYPES.STUDENT} label={
                <Text style={{...styles.radioButtonText, color: studentColor, backgroundColor: studentBgColor }}>
                  Student
                </Text>
              } />
              <RadioButtonItem style={styles.radioButton} value={USER_TYPES.TUTOR} label={
                <Text style={{...styles.radioButtonText, color: tutorColor, backgroundColor: tutorBgColor }}>
                  Tutor
                </Text>
              } />
            </RadioButtonGroup>
          </View>
          <Button title='Create User' />
          </ScrollView>
      </View>
    <Toast />
    </>
 );
}


const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 10,
    marginTop: 15,
  },
  titleContainer: {
    justifyContent: 'center',
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: 'black',
    paddingBottom:10,
  },
  Title: {
    fontWeight: 'bold',
    fontSize: 20,
    marginTop: 0,
    marginBottom: 10,
    marginLeft: 40,
    marginRight: 40,
    textAlign: 'center',
  },
  label: {
    fontSize: 18,
    fontWeight: 'bold',
    marginTop: 20,
    alignSelf: 'flex-start'
  },
  input: {
    height: 40,
    width: '100%',
    borderColor: '#ccc',
    borderWidth: 1,
    padding: 10,
    marginTop: 10,
    borderRadius: 5
  },
  radioButton: {
    margin: 5,
    marginLeft: 0,
    display: 'none',
  },
  radioButtonText: {
    width: 200,
    padding: 10,
    margin: 5,
    textAlign: 'center',
    alignSelf: 'center',
    borderWidth: 1,
    borderRadius: 15,
  },
});
